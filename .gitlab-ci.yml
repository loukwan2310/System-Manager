stages:
  - sonar
  - deploy

image: docker:latest
variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_TLS_CERTDIR: ""
services:
  - docker:dind

.before_script_template:
  before_script:
    - "command -v ssh-agent >/dev/null || ( apk add --update openssh )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY " | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SSH_IP_SERVER  >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  stage: sonar
  tags:
    - vmogroup
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true

deploy-dev:
  stage: deploy
  extends: .before_script_template
  tags:
    - vmogroup
  script:
    - ssh -tt -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP_SERVER "cd /home/developer/NTT221202-BE && git pull && docker-compose -f docker-compose.yml up --build -d"
  only:
    - dev

deploy-prod:
  stage: deploy
  extends: .before_script_template
  tags:
    - vmogroup
  script:
    - ssh-keyscan $SSH_IP_SERVER_PROD  >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh -tt -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP_SERVER_PROD "cd /home/developer/NTT221202-BE && git pull && docker-compose -f docker-compose.prod.yml up --build -d"
  only:
    - prod
